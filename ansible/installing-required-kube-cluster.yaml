---
- hosts: "kube_master, kube_nodes"
  become: true
  become_method: sudo
  become_user: root
  gather_facts: yes
  connection: ssh
  name: Installing Required Softwares in Kubernetes Master Node [Java, Docker, Kubernetes]
  vars:
    password: password
  tasks:
    # Installing Java
    - name: Installing Java
      ansible.builtin.apt:
        name: openjdk-8-jdk
        state: latest
        update_cache: yes
        install_recommends: yes

    # Installing Docker
    - name: Add Docker GPG apt Key
      ansible.builtin.apt_key:
        url: https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }}/gpg
        state: present
    
    - name: Add Docker into sources list
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }} {{ansible_distribution_release}} stable
        state: present
        filename: docker

    - name: Update apt and install docker-ce
      ansible.builtin.apt: 
        update_cache: yes 
        name: "{{ item }}" 
        state: latest
      loop: 
        - docker-ce
        - docker-ce-cli
        - containerd.io

    - name: Enabling docker service
      ansible.builtin.service:
        name: docker
        enabled: yes
        state: started

    - name: Creating a docker configuration for kubernetes
      file:
        path: /etc/docker/daemon.json
        state: touch
        
    - name: Adding kubernetes configuration to daemon.json file
      shell: |
              cat <<EOF | sudo tee /etc/docker/daemon.json
              {
                "exec-opts": ["native.cgroupdriver=systemd"],
                "log-driver": "json-file",
                "log-opts": {
                  "max-size": "100m"
                },
                "storage-driver": "overlay2"
              }
              EOF

    # Installing Kubernetes
   
    - name: Install and configure dependencies
      shell: |
              sudo apt-get update && sudo apt-get install -y apt-transport-https curl
              curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -

    - name: Create kubernetes repo file
      file:
        path: /etc/apt/sources.list.d/kubernetes.list
        state: touch

    - name: Add K8s Source
      blockinfile:
        path: /etc/apt/sources.list.d/kubernetes.list
        block: |
                deb https://apt.kubernetes.io/ kubernetes-xenial main

    - name: Update apt and install Kubernetes
      ansible.builtin.apt: 
        update_cache: yes 
        name: "{{ item }}" 
        state: latest
      loop: 
        - kubelet
        - kubeadm
        - kubectl

    - name: Apt Mark hold docker-ce, kubectl, kubeadm, kubelet
      shell: |
              sudo apt-mark hold docker-ce kubelet kubeadm kubectl

    - name: Confiruing net bridge adaptor
      shell: |
              echo "net.bridge.bridge-nf-call-iptables=1" | sudo tee -a /etc/sysctl.conf
    
    - name: Apply new settings
      shell: |
              sudo sysctl -p

    # Restarting Docker Service and Daemons
    - name: Restarting Docker Service and Daemons
      shell: |
              sudo systemctl daemon-reload
              sudo systemctl restart docker
    
    # Creating Kube, Jenkins User
    - name: Create the kube user account
      ansible.builtin.user: 
        name: kube
        shell: /bin/bash
        password: "{{ password | password_hash('sha512') }}"
        groups: 
          - docker 
          - sudo
        append: yes 
        state: present 
        home: /home/kube
        generate_ssh_key: yes
        ssh_key_bits: 2048
        ssh_key_file: .ssh/id_rsa
        ssh_key_type: rsa
      register: kube
        

    - name: Allow 'kube' to use sudo without needing a password
      lineinfile:
        dest: /etc/sudoers
        line: 'kube ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: set up authorized keys for the kube user
      authorized_key: 
        user: kube 
        key: "{{ kube.ssh_public_key }}"
        state: present

    # Creating Jenkins User
    - name: Creating Jenkins User
      ansible.builtin.user:
        name: jenkins
        shell: /bin/bash
        password: "{{ password | password_hash('sha512') }}"
        groups: 
          - docker 
          - sudo
        append: yes
        state: present
        home: /home/jenkins
        generate_ssh_key: yes
        ssh_key_bits: 2048
        ssh_key_file: .ssh/id_rsa
        ssh_key_type: rsa
      register: jenkins

    - name: Add jenkins user to the sudoers
      lineinfile:
        dest: /etc/sudoers
        line: 'jenkins ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'
    
    - name: Set authorized key for the Jenkins user
      authorized_key: 
        user: jenkins
        key: "{{ jenkins.ssh_public_key }}"
        state: present

    # - name: Changing the mode of authorize_keys file
    #   ansible.builtin.file:
    #     path: /home/jenkins/.ssh/authorized_keys
    #     mode: 0700
    #     owner: jenkins
    #     group: jenkins